"use strict";document.addEventListener("DOMContentLoaded",(function(){try{var e=function(e){e.classList.remove("modal--active"),o.style.overflowY="",function(e){e.removeEventListener("keydown",t),e.removeEventListener("click",n)}(e)},t=function(t){var n=t.currentTarget;"Escape"===t.key&&e(n)},n=function(t){t.currentTarget.querySelector(".modal__content").contains(t.target)||e(t.currentTarget)},r=document.querySelectorAll("[data-modal]"),o=document.querySelector("body"),a=document.querySelectorAll("[data-modal-close]");r.forEach((function(e){e.addEventListener("click",(function(e){e.preventDefault();var r=e.target.closest("[data-modal]").getAttribute("data-modal"),a=document.getElementById(r);a&&(a.classList.add("modal--active"),o.style.overflow="hidden",function(e){e.addEventListener("keydown",t),e.addEventListener("click",n)}(a))}))})),a.forEach((function(t){t.addEventListener("click",(function(t){var n=t.target.closest(".modal");n&&e(n)}))}))}catch(e){}var c=document.querySelector("#burger"),i=document.querySelector(".header-burger__content");c.addEventListener("click",(function(){i.classList.toggle("active")}));var d=document.documentElement,l=getComputedStyle(d).getPropertyValue("--marquee-elements-displayed");if(document.querySelectorAll(".logos__stroke").forEach((function(e){d.style.setProperty("--marquee-elements",e.children.length);for(var t=0;t<l;t++)e.appendChild(e.children[t].cloneNode(!0))})),window.matchMedia("(max-width: 639px)").matches){var s=document.querySelectorAll(".faq__box");s.forEach((function(e){e.addEventListener("click",(function(){var t;t="active",s.forEach((function(e){e.classList.remove(t)})),e.classList.toggle("active")}))}))}new Swiper(".faq__swiper",{navigation:{nextEl:".faq__header .swiper-button-next",prevEl:".faq__header .swiper-button-prev"},breakpoints:{320:{spaceBetween:20},640:{spaceBetween:40}},slidesPerView:"auto"});(new WOW).init()}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
